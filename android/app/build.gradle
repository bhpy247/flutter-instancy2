plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 34
//    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.instancy.flutter_instancy_2"

        //cloud_firestore needs min sdk version 19
        //flutter_facebook_auth needs min sdk version 19

        minSdkVersion 24
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

//        minSdkVersion flutter.minSdkVersion
//        targetSdkVersion flutter.targetSdkVersion
//        versionCode flutterVersionCode.toInteger()
//        versionName flutterVersionName

        multiDexEnabled true
    }

    lintOptions {
        checkReleaseBuilds false
    }

    flavorDimensions "app"
    productFlavors {
        upgradedenterprise {
            dimension "app"
            applicationId "com.instancy.upgradedenterpriseapp2"
            versionCode 2
            versionName "1.0.13"
            resValue "string", "app_name", "Upgraded 2 Enterprise Learning"
        }

        enterpriseapp {
            dimension "app"
            applicationId "com.instancy.enterpriseapp"
            versionCode 49
            versionName "2.3.10"
            resValue "string", "app_name", "Enterprise Learning"
        }

        instancylearning {
            dimension "app"
            applicationId "com.instancy.instancy_lite"
            versionCode 50
            versionName "1.2.5"
            resValue "string", "app_name", "Instancy"
        }

        elearning {
            dimension "app"
            applicationId "com.instancy.elearning"
            versionCode 1
            versionName "1.0.0"
            resValue "string", "app_name", "E-Learning"
        }

        qalearning2 {
            dimension "app"
            applicationId "com.instancy.qalearning2"
            versionCode 25
            versionName "1.0.19"
            resValue "string", "app_name", "QA Learning 2"
        }

        franklincoveysa {
            dimension "app"
            applicationId "com.instancy.franklincoveysa"
            versionCode 2
            versionName "1.0.1"
            resValue "string", "app_name", "TAK"
        }

        gurruzi {
            dimension "app"
            applicationId "com.instancy.gurruzi"
            versionCode 3
            versionName "1.0.1"
            resValue "string", "app_name", "Gurruzi"
        }

        nestle {
            dimension "app"
            applicationId "com.instancy.nestle"
            versionCode 1
            versionName "1.0.0"
            resValue "string", "app_name", "Nestle Learning Center"
        }
    }

    signingConfigs {
        release {
            //storeFile file("/Users/stefano/Desktop/Work/meet/Flutter_InstancyLearning/key.jks")
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }

        debug {

        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }

        debug {
            signingConfig signingConfigs.release
            debuggable true
        }
    }

//    namespace 'com.instancy.flutter_instancy_2'
}

flutter {
    source '../..'
}

apply plugin: 'com.google.gms.google-services'
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.google.android.play:integrity:1.3.0'
}
